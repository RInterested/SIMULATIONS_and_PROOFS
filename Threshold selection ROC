set.seed(561)

cost0 = 1   # Cost of misclassifying a normal as having cancer in million $
cost1 = 5   # Cost of misclassifying a cancer patient as normal (death?)

n = 7000    # Total cases
pi0 =.8     # Percentage of normal
pi1 =.2     # Percentage of sick

scores_testA_Normals = rnorm(n*pi0, mean=3, sd=1)
scores_testA_Sick = rnorm(n*pi1, 6, 1)

hist(scores_testA_Normals,border=F, xlim=c(0,10))
hist(scores_testA_Sick,col=2,border=F, add=T)


(Threshold = quantile(scores_testA_Sick)[1] + 0.5 * cost0/cost1 * quantile(scores_testA_Sick)[1])
abline(v=Threshold)

(Loss = cost0 * (1 - pnorm(Threshold,3,1)) * pi0 + cost1 * pnorm(Threshold,6,1) * pi1)

data = data.frame(outcome=as.factor(c(rep(0,n*pi0),rep(1,n*pi1))),
                  scores=c(scores_testA_Normals,scores_testA_Sick))
library(pROC)                  
pred <- prediction(data$scores, data$outcome)
perf <- performance(pred, "tpr", "fpr")
# performance metrics TPR: True Positive Ratio FPR: False Positive Ratio
plot(perf, col = "blue4", lwd=3)
abline(0, 1, col = "grey")
auc <- performance(pred, "auc")
legend("bottomright", 
       c(paste("AUC=",round(as.numeric(auc@y.values), digits = 2)),
         paste("Loss=",round(Loss,2))), col = c("blue4"), pch = c(3),
       ) 

rock = ROC(form = outcome ~ scores, data=data, plot = "ROC", MX = T)
hist(rock$res$lr.eta)
(machineT = as.numeric(names(which.max(rowSums(rock$res[, c("sens", "spec")])))))
rock$res[which.max(rowSums(rock$res[, c("sens", "spec")])),]

logireg = glm(data$outcome~data$scores,family="binomial")
logireg$coefficients
rock$lr$coefficients
(score.Thresh <- exp(logireg$coefficients[1]+
      Threshold*logireg$coefficients[2])/(1+exp(logireg$coefficients[1]+
                                                  Threshold*logireg$coefficients[2])))
rock$diff <- abs(rock$res$lr.eta - score.Thresh)
rock$res[which.min(rock$diff),]
Tval = rock$res[which.min(rock$diff),]$lr.eta

(log(1/Tval - 1) - logireg$coefficients[1])/logireg$coefficients[2]

(log(1/machineT - 1) - logireg$coefficients[1])/logireg$coefficients[2]
